{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/layout/login/login-backend.service.ts","./src/app/layout/login/login.component.ts","./src/app/layout/login/login.component.html","./src/app/layout/login/login.module.ts","./src/app/layout/login/login.service.ts","./src/app/layout/navbar/navbar.component.ts","./src/app/layout/navbar/navbar.component.html","./src/app/layout/navbar/navbar.module.ts","./src/app/layout/search-shows/search-form/search-form.component.ts","./src/app/layout/search-shows/search-form/search-form.component.html","./src/app/layout/search-shows/search-shows-backend.service.ts","./src/app/layout/search-shows/search-shows.component.ts","./src/app/layout/search-shows/search-shows.component.html","./src/app/layout/search-shows/search-shows.module.ts","./src/app/layout/search-shows/search-shows.service.ts","./src/app/layout/search-shows/show-card/show-card.component.ts","./src/app/layout/search-shows/show-card/show-card.component.html","./src/app/layout/show-details/show-details-backend.service.ts","./src/app/layout/show-details/show-details.component.ts","./src/app/layout/show-details/show-details.component.html","./src/app/layout/show-details/show-details.module.ts","./src/app/layout/show-details/show-details.service.ts","./src/app/layout/show-episodes/episodes-dialog/episodes-dialog.component.ts","./src/app/layout/show-episodes/episodes-dialog/episodes-dialog.component.html","./src/app/layout/show-episodes/show-episodes-backend.service.ts","./src/app/layout/show-episodes/show-episodes.component.ts","./src/app/layout/show-episodes/show-episodes.component.html","./src/app/layout/show-episodes/show-episodes.module.ts","./src/app/layout/show-episodes/show-episodes.service.ts","./src/app/shared/constants.ts","./src/app/shared/custom-rating/custom-rating.component.ts","./src/app/shared/custom-rating/custom-rating.component.html","./src/app/shared/handleError.ts","./src/app/shared/shared.module.ts","./src/app/shared/token.interceptor.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SearchShowsComponent } from './layout/search-shows/search-shows.component';\r\nimport { ShowDetailsComponent } from './layout/show-details/show-details.component';\r\nimport { ShowEpisodesComponent } from './layout/show-episodes/show-episodes.component';\r\nimport { LoginComponent } from './layout/login/login.component';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n    { path: 'login', component: LoginComponent },\r\n    { path: 'search', component: SearchShowsComponent },\r\n    { path: 'details/:id', component: ShowDetailsComponent },\r\n    { path: ':id/episodes/:season', component: ShowEpisodesComponent},\r\n    { path: '**', redirectTo: '/login', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n    declarations: [],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forRoot(routes)\r\n    ]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'lynx';\r\n}\r\n","<app-navbar></app-navbar>\r\n<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SearchShowsModule } from './layout/search-shows/search-shows.module';\r\nimport { ShowDetailsModule } from './layout/show-details/show-details.module';\r\nimport { ShowEpisodesModule } from './layout/show-episodes/show-episodes.module';\r\nimport { NavbarModule } from './layout/navbar/navbar.module';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { TokenInterceptor } from './shared/token.interceptor';\r\nimport { LoginModule } from './layout/login/login.module';\r\n\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        AppRoutingModule,\r\n        RouterModule,\r\n        SearchShowsModule,\r\n        ShowDetailsModule,\r\n        ShowEpisodesModule,\r\n        NavbarModule,\r\n        LoginModule\r\n    ],\r\n    bootstrap: [AppComponent],\r\n    providers: [\r\n        { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true },\r\n    ]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { apiBaseUrl, httpPostOptions } from '../../shared/constants';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { handleError } from '../../shared/handleError';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginBackendService {\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getToken(apikey: any, userkey: any, username: any): Observable<any> {\r\n      const item = {\r\n        apikey,\r\n        userkey,\r\n        username\r\n      };\r\n\r\n      return this.http.post<any>(`${apiBaseUrl}/login`, item, httpPostOptions)\r\n          .pipe(\r\n              tap(() => console.log(`token requested`)),\r\n              catchError(handleError<any>('getToken'))\r\n          );\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { LoginService } from './login.service';\r\n\r\n\r\n// TODO this in not properly implemted. Neither the logic, nor the design\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent {\r\n\r\n    constructor(private service: LoginService) { }\r\n\r\n    login() {\r\n        this.service.loadToken();\r\n    }\r\n\r\n}\r\n","<!---todo needs a much better implementation-->\r\n<div class=\"h-100 d-flex justify-content-center align-items-center\">\r\n    <div class=\"login-form\">\r\n        <div class=\"d-flex justify-content-center align-items-center h-25\">\r\n            <p class=\"h2\">\r\n                Login to TV Shows\r\n            </p>\r\n        </div>\r\n        <div class=\"d-flex justify-content-center align-items-center h-75\">\r\n            <div class=\"w-75\">\r\n                <div>\r\n                    <button class=\"btn w-100 btn-success\" (click)=\"login()\"> Login as guest</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoginComponent } from './login.component';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n\r\n\r\n@NgModule({\r\n    declarations: [LoginComponent],\r\n    imports: [\r\n        CommonModule,\r\n        SharedModule,\r\n        RouterModule\r\n],\r\n    exports: [LoginComponent]\r\n})\r\nexport class LoginModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { LoginBackendService } from './login-backend.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n    private token$: BehaviorSubject<string>;\r\n\r\n    constructor(private backendService: LoginBackendService,\r\n                private router: Router) {\r\n        this.token$ = new BehaviorSubject<string>(null);\r\n\r\n      }\r\n\r\n    // todo fetch actual values from user inputs, this is a temporary workaround to be able to log in\r\n    loadToken() {\r\n        this.backendService.getToken('8d78281694597960adbbfa53723e6587', '5EA69128B1BD67.52508310', 'Maximilian Both')\r\n            .subscribe((result) => {\r\n                this.setToken(result.token);\r\n                this.router.navigate(['/search']);\r\n            });\r\n    }\r\n\r\n    setToken(token: string) {\r\n       this.token$.next(token);\r\n    }\r\n\r\n    get token(): string {\r\n       return this.token$.getValue();\r\n    }\r\n\r\n    get _token(): Observable<any> {\r\n        return this.token$.asObservable();\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { SearchShowsService } from '../search-shows/search-shows.service';\r\nimport { NavigationStart, Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.scss']\r\n})\r\nexport class NavbarComponent {\r\n    public faSignOutAlt = faSignOutAlt;\r\n    public displaySearch: boolean;\r\n    public displayNavbar: boolean;\r\n\r\n    constructor(private searchShowsService: SearchShowsService,\r\n                private router: Router) {\r\n        this.router.events.subscribe(value => {\r\n            if (value instanceof NavigationStart) {\r\n                console.log(value.url); // your current route\r\n                if (value.url === '/search') {\r\n                    this.displaySearch = true;\r\n                } else  {\r\n                    this.displaySearch = false;\r\n                }\r\n                if (value.url === '/login') {\r\n                    this.displayNavbar = false;\r\n                } else {\r\n                    this.displayNavbar = true;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    onSearchValueChange(value) {\r\n        this.searchShowsService.searchShows(value);\r\n    }\r\n\r\n    logout() {\r\n        this.searchShowsService.setShowList(null);\r\n    }\r\n\r\n}\r\n","<nav class=\"navbar navbar-dark bg-dark sticky-top\" *ngIf=\"displayNavbar\" >\r\n    <a class=\"navbar-brand mr-auto\" routerLink=\"/search\">\r\n        <img class=\"img-fluid logo\" alt=\"logo\" src=\"./assets/img/television-icon.png\">\r\n    </a>\r\n    <app-search-form *ngIf=\"displaySearch\" (searchValueChange)=\"onSearchValueChange($event)\"></app-search-form>\r\n    <a class=\"nav-link text-success pl-3\" routerLink=\"/login\" routerLinkActive=\"active\" (click)=\"logout()\">\r\n        <span class=\"text-success\">\r\n             <fa-icon [icon]=\"faSignOutAlt\"></fa-icon>\r\n        </span>\r\n        <span>Logout</span>\r\n    </a>\r\n</nav>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NavbarComponent } from './navbar.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SearchShowsModule } from '../search-shows/search-shows.module';\r\nimport { SharedModule } from '../../shared/shared.module';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [NavbarComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    RouterModule,\r\n    SearchShowsModule,\r\n  ],\r\n  exports: [NavbarComponent]\r\n})\r\nexport class NavbarModule { }\r\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'app-search-form',\r\n  templateUrl: './search-form.component.html',\r\n  styleUrls: ['./search-form.component.scss']\r\n})\r\nexport class SearchFormComponent implements OnInit {\r\n  @Output() searchValueChange: EventEmitter<string>;\r\n  public faSearch;\r\n  public searchValue: string;\r\n\r\n  constructor() {\r\n    this.faSearch = faSearch;\r\n    this.searchValueChange = new EventEmitter();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSubmit() {\r\n    this.searchValueChange.emit(this.searchValue);\r\n  }\r\n}\r\n","<div class=\"\">\r\n    <form\r\n            class=\"d-flex flex-row border border-light \"\r\n            #searchShows=\"ngForm\" (ngSubmit)=\"onSubmit()\">\r\n\r\n        <input\r\n                type=\"text\"\r\n                placeholder=\"Search for TV Shows\"\r\n                class=\"form-control form-control-sm text-white bg-dark flex-grow-1 border-0\"\r\n                required\r\n                name=\"shows\"\r\n                [(ngModel)]=\"searchValue\"\r\n                #shows=\"ngModel\"/>\r\n\r\n        <button\r\n                type=\"submit\"\r\n                class=\"btn-success\"\r\n                title=\"Clear Input\"\r\n                [disabled]=\"!searchShows.form.valid\">\r\n          <span class=\"d-flex justify-content-center\">\r\n              <fa-icon [icon]=\"faSearch\"></fa-icon>\r\n          </span>\r\n        </button>\r\n\r\n\r\n\r\n    </form>\r\n    <div [hidden]=\"shows.valid || shows.pristine\"\r\n         class=\"alert bg-transparent text-danger small\">\r\n        Description is required\r\n    </div>\r\n</div>\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { handleError } from '../../shared/handleError';\r\nimport { apiBaseUrl, httpPostOptions } from '../../shared/constants';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SearchShowsBackendService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n    getShowsList(searchValue: number): Observable<any> {\r\n        return this.http.get<any>(`${apiBaseUrl}/search/series?name=${searchValue}`)\r\n            .pipe(\r\n                tap(_ => console.log('fetched shows')),\r\n                catchError(handleError<any>('getShowsList', {data: []}))\r\n            );\r\n    }\r\n}\r\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { SearchShowsService } from './search-shows.service';\r\nimport { Subscription } from 'rxjs';\r\nimport {Router} from '@angular/router';\r\nimport {LoginService} from '../login/login.service';\r\n\r\n\r\n@Component({\r\n    selector: 'app-search-shows',\r\n    templateUrl: './search-shows.component.html',\r\n    styleUrls: ['./search-shows.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class SearchShowsComponent implements OnInit, OnDestroy {\r\n    public tvShows: any[];\r\n    private subscriptions: Subscription;\r\n    public page: number;\r\n    public pageSize: number;\r\n\r\n    constructor(private service: SearchShowsService,\r\n                private router: Router,\r\n                private loginService: LoginService) {\r\n        this.subscriptions = new Subscription();\r\n        this.page = 1;\r\n        this.pageSize = 10;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.subscriptions.add(this.service.showsList\r\n            .subscribe(result => {\r\n                this.tvShows = result;\r\n            })\r\n        );\r\n\r\n        this.subscriptions.add(this.loginService._token\r\n            .subscribe(result => {\r\n                if (!result) {\r\n                    this.router.navigate(['/login']);\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.subscriptions.unsubscribe();\r\n    }\r\n}\r\n","<div class=\"container\">\r\n    <div *ngIf=\"tvShows; else noSearchValue\">\r\n        <ul class=\"list-group\">\r\n            <li class=\"list-group-item bg-transparent \" *ngFor=\"let show of tvShows | slice: (page-1) * pageSize : (page-1) * pageSize + pageSize\">\r\n                <app-show-card [tvShow]=\"show\"></app-show-card>\r\n            </li>\r\n        </ul>\r\n        <ngb-pagination\r\n                class=\"d-flex justify-content-center\"\r\n                [collectionSize]=\"tvShows.length\"\r\n                [(page)]=\"page\" [maxSize]=\"5\"\r\n                [rotate]=\"true\" [ellipses]=\"false\"\r\n                [boundaryLinks]=\"false\">\r\n        </ngb-pagination>\r\n    </div>\r\n\r\n    <ng-template #noSearchValue>\r\n        <div class=\"mt-5 position-relative\">\r\n            <img class=\"img-fluid\" alt=\"My image name\" src=\"./assets/img/main_page.jpg\">\r\n            <div class=\"position-absolute logo-title-caption h2\">\r\n                Welcome!\r\n            </div>\r\n            <div class=\"position-absolute logo-caption \">\r\n                <p>This page is created with\r\n                    <a href=\"https://angular.io/\" target=\"_blank\">Angular</a>\r\n                    <span> and powered by </span>\r\n                    <a href=\"https://www.thetvdb.com/\" target=\"_blank\">The TvDb</a>.\r\n                </p>\r\n                <p>Search for your favourite shows, by simply typing the name in\r\n                    top bar and hitting enter or clicking the search button with the mouse.\r\n                </p>\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n</div>\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SearchShowsComponent } from './search-shows.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { SearchFormComponent } from './search-form/search-form.component';\r\nimport { ShowCardComponent } from './show-card/show-card.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SharedModule } from '../../shared/shared.module';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [SearchShowsComponent, SearchFormComponent, ShowCardComponent],\r\n  exports: [SearchShowsComponent, SearchFormComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    RouterModule\r\n  ]\r\n})\r\nexport class SearchShowsModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { SearchShowsBackendService } from './search-shows-backend.service';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SearchShowsService {\r\n    private showsList$: BehaviorSubject<any>;\r\n\r\n    constructor( private backendService: SearchShowsBackendService) {\r\n        this.showsList$ = new BehaviorSubject<any>(null);\r\n\r\n    }\r\n\r\n    searchShows(searchValue: any) {\r\n        this.backendService.getShowsList(searchValue)\r\n            .subscribe((result) => {\r\n              this.setShowList(result.data);\r\n            });\r\n    }\r\n\r\n    setShowList(value: any) {\r\n      this.showsList$.next(value);\r\n    }\r\n\r\n    get showsList(): Observable<any> {\r\n      return this.showsList$.asObservable();\r\n    }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { ShowDetailsService } from '../../show-details/show-details.service';\r\n\r\n@Component({\r\n  selector: 'app-show-card',\r\n  templateUrl: './show-card.component.html',\r\n  styleUrls: ['./show-card.component.scss']\r\n})\r\nexport class ShowCardComponent {\r\n    @Input() tvShow: any;\r\n    public showMore: boolean;\r\n\r\n    constructor(private showDetailsService: ShowDetailsService) {\r\n        this.showMore = false;\r\n    }\r\n\r\n    navigateToDetails(showId: number) {\r\n\r\n        this.showDetailsService.loadDetails(showId);\r\n        this.showDetailsService.loadSeasons(showId);\r\n    }\r\n\r\n}\r\n","<div class=\" bg-transparent border border-dark p-2 d-flex flex-row align-items-stretch\">\r\n<!--    <p>{{tvShow | json}}</p>-->\r\n    <div class=\"flex-grow-0 px-2\">\r\n        <a [routerLink]=\"'/details/' + tvShow.id\" (click)=\"navigateToDetails(tvShow.id)\">\r\n            <img [src]=\"'https://artworks.thetvdb.com' + tvShow.image\" alt=\"logo\" class=\"img-fluid show-card-image\">\r\n        </a>\r\n\r\n    </div>\r\n    <div class=\"flex-grow-1 px-2\">\r\n        <div>\r\n            <a class=\"h4\" [routerLink]=\"'/details/' + tvShow.id\" (click)=\"navigateToDetails(tvShow.id)\">\r\n                {{tvShow.seriesName}}\r\n            </a>\r\n            <span class=\"h6 text-muted\">{{tvShow.network ? tvShow.network: 'N/A'}}</span>\r\n            <span class=\"\">,&nbsp;{{tvShow.firstAired ? tvShow.firstAired: 'N/A'}}</span>\r\n        </div>\r\n\r\n\r\n        <div>\r\n            <p *ngIf=\"tvShow.overview\">\r\n                {{(showMore) ? tvShow.overview : tvShow.overview | slice:0:600}}\r\n                <span class=\"text-muted cursor-pointer\" *ngIf=\"!showMore\" (click)=\"showMore=true\">Show More...</span>\r\n            </p>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { apiBaseUrl } from '../../shared/constants';\r\nimport { catchError, tap} from 'rxjs/operators';\r\nimport { handleError } from '../../shared/handleError';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ShowDetailsBackendService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getDetails(id: number,): Observable<any> {\r\n      return this.http.get<any>(`${apiBaseUrl}/series/${id}`)\r\n          .pipe(\r\n              tap(_ => console.log('fetched details')),\r\n              catchError(handleError<any>('getDetails', {data: []}))\r\n          );\r\n  }\r\n\r\n    getSeasons(id: number): Observable<any> {\r\n        return this.http.get<any>(`${apiBaseUrl}/series/${id}/episodes/summary`)\r\n            .pipe(\r\n                tap(_ => console.log('fetched seasons')),\r\n                catchError(handleError<any>('getSeasons', {data: []}))\r\n            );\r\n    }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { ShowDetailsService } from './show-details.service';\r\nimport { ShowEpisodesService } from '../show-episodes/show-episodes.service';\r\nimport { Router } from '@angular/router';\r\nimport {LoginService} from '../login/login.service';\r\n\r\n@Component({\r\n  selector: 'app-tv-shows-details',\r\n  templateUrl: './show-details.component.html',\r\n  styleUrls: ['./show-details.component.scss']\r\n})\r\nexport class ShowDetailsComponent implements OnDestroy, OnInit {\r\n    private subscriptions: Subscription;\r\n    public details: any;\r\n    public seasonsList: any;\r\n    public token: string;\r\n\r\n    constructor(private service: ShowDetailsService,\r\n                private episodesService: ShowEpisodesService,\r\n                private router: Router,\r\n                private loginService: LoginService,\r\n) {\r\n\r\n        this.subscriptions = new Subscription();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.subscriptions.add(this.service.details\r\n            .subscribe(result => {\r\n                this.details = result;\r\n            })\r\n        );\r\n\r\n        this.subscriptions.add(this.service.seasonsList\r\n            .subscribe(result => {\r\n                this.seasonsList = result;\r\n            })\r\n        );\r\n\r\n        // todo check if token exists with an guard and redirect to the main page based on that\r\n        this.subscriptions.add(this.loginService._token\r\n            .subscribe(result => {\r\n                if (!result) {\r\n                    this.router.navigate(['/login']);\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n\r\n    ngOnDestroy(): void {\r\n        this.subscriptions.unsubscribe();\r\n    }\r\n\r\n    showEpisodes(id: number, season: string) {\r\n        this.router.navigate([`${id}/episodes/${season}`]);\r\n        this.episodesService.loadEpisodes(season, this.details.id);\r\n    }\r\n\r\n}\r\n","<div class=\"container\" *ngIf=\"details\">\r\n\r\n    <div class=\"row p-3\">\r\n        <div class=\"col-8 card bg-transparent\">\r\n\r\n            <div class=\"row\">\r\n\r\n                <div class=\"col-9\">\r\n                    <div class=\"py-3\">\r\n                        <p class=\"h3\">{{details.seriesName ? details.seriesName : 'N/A'}}</p>\r\n                        <p>\r\n                            <span class=\"font-weight-bold\">Status:</span> {{details.status ? details.status : 'N/A'}}\r\n                        </p>\r\n                        <p>\r\n                            <span class=\"font-weight-bold\">Airs:</span> {{details.airsDayOfWeek ? details.airsDayOfWeek : 'N/A'}}\r\n                        </p>\r\n                        <p>\r\n                            <span class=\"font-weight-bold\">Air Time:</span> {{details.airsTime ? details.airsTime : 'N/A'}}\r\n                        </p>\r\n                        <p>\r\n                            <span class=\"font-weight-bold\">Genre:</span> {{details.genre ? details.genre : 'N/A'}}\r\n                        </p>\r\n                        <div>\r\n                            <span class=\"font-weight-bold\">Rating: </span>\r\n                            <app-custom-rating [rate]=\"details.siteRating/2\"></app-custom-rating>\r\n                            <span class=\"rating-text\">({{details.siteRating ? details.siteRating : 'N/A'}})</span>\r\n                        </div>\r\n                        <p>{{details.overview ? details.overview : 'N/A'}}</p>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-3\">\r\n                    <div class=\"py-3\">\r\n                        <img [src]=\"'https://artworks.thetvdb.com/banners/' + details.poster\" alt=\"logo\"  class=\"img-fluid\">\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n        <div class=\"col-4 card bg-transparent seasons-list-wrapper\" *ngIf=\"seasonsList\">\r\n            <ul class=\"list-group\">\r\n                <li *ngFor=\"let season of seasonsList.airedSeasons\"\r\n                    (click)=\"showEpisodes(details.id, season)\"\r\n                    class=\"list-group-item bg-dark m-1 cursor-pointer\">Season {{season}}\r\n                </li>\r\n            </ul>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ShowDetailsComponent } from './show-details.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SharedModule } from '../../shared/shared.module';\r\n\r\n\r\n\r\n@NgModule({\r\n    declarations: [ShowDetailsComponent],\r\n    exports: [ShowDetailsComponent],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule,\r\n        SharedModule\r\n    ]\r\n})\r\nexport class ShowDetailsModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { SearchShowsService } from '../search-shows/search-shows.service';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { ShowDetailsBackendService } from './show-details-backend.service';\r\nimport {BehaviorSubject, Observable} from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ShowDetailsService {\r\n    private details$: BehaviorSubject<any>;\r\n    private seasonsList$: BehaviorSubject<any>;\r\n    private episodesList$: BehaviorSubject<any>;\r\n\r\n    constructor(private searchShowsService: SearchShowsService,\r\n                private backendService: ShowDetailsBackendService) {\r\n        this.details$ = new BehaviorSubject<any>(null);\r\n        this.seasonsList$ = new BehaviorSubject<any>(null);\r\n    }\r\n\r\n    loadDetails(id: number) {\r\n        // alert(id + this.searchShowsService.token);\r\n\r\n        this.backendService.getDetails(id)\r\n            .subscribe((result) => {\r\n                this.setDetails(result.data);\r\n            });\r\n    }\r\n\r\n    setDetails(value: any) {\r\n        this.details$.next(value);\r\n    }\r\n\r\n    get details(): Observable<any> {\r\n        return this.details$.asObservable();\r\n    }\r\n\r\n    loadSeasons(id: number) {\r\n        this.backendService.getSeasons(id)\r\n            .subscribe((result) => {\r\n                // this.setDetails(result.data);\r\n                this.setSeasons(result.data);\r\n            });\r\n    }\r\n\r\n    setSeasons(value: any) {\r\n        this.seasonsList$.next(value);\r\n    }\r\n\r\n    get seasonsList(): Observable<any> {\r\n        return this.seasonsList$.asObservable();\r\n    }\r\n\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-episodes-dialog',\r\n  templateUrl: './episodes-dialog.component.html',\r\n  styleUrls: ['./episodes-dialog.component.scss']\r\n})\r\nexport class EpisodesDialogComponent {\r\n\r\n  @Input() episode;\r\n\r\n  constructor(public activeModal: NgbActiveModal) {}\r\n\r\n}\r\n","<div class=\"modal-header bg-dark\">\r\n    <h4 class=\"modal-title\">{{episode.episodeName ? episode.episodeName : 'N/A'}}</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n</div>\r\n<div class=\"modal-body bg-dark\">\r\n    <div class=\"d-flex justify-content-center\">\r\n        <img [src]=\"'https://artworks.thetvdb.com/banners/' + episode.filename\" class=\"img-fluid w-100\" alt=\"banner\">\r\n    </div>\r\n    <div>\r\n        <span class=\"font-weight-bold\">Directors: </span>\r\n        <span>{{episode.directors ? episode.directors : 'N/A'}}</span>\r\n    </div>\r\n    <div>\r\n        {{episode.overview ? episode.overview : 'N/A'}}\r\n    </div>\r\n</div>\r\n<div class=\"modal-footer bg-dark\">\r\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"activeModal.close('Close click')\">Close</button>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { apiBaseUrl } from '../../shared/constants';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { handleError } from '../../shared/handleError';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Episode } from './episode';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ShowEpisodesBackendService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getEpisodes(id: number, season: number | string): Observable<any> {\r\n    return this.http.get<any>(`${apiBaseUrl}/series/${id}/episodes/query?airedSeason=${season}`)\r\n        .pipe(\r\n            tap(_ => console.log('fetched seasons')),\r\n            catchError(handleError<any>('getSeasons', {data: []}))\r\n        );\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ShowEpisodesService } from './show-episodes.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { EpisodesDialogComponent } from './episodes-dialog/episodes-dialog.component';\r\nimport { Router } from '@angular/router';\r\nimport { Episode } from './episode';\r\nimport { LoginService } from '../login/login.service';\r\n\r\n@Component({\r\n    selector: 'app-show-episodes',\r\n    templateUrl: './show-episodes.component.html',\r\n    styleUrls: ['./show-episodes.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n\r\n})\r\nexport class ShowEpisodesComponent implements OnDestroy, OnInit {\r\n    private subscriptions: Subscription;\r\n    public episodesList: Episode[];\r\n    public page: number;\r\n    public pageSize: number;\r\n\r\n    constructor(private service: ShowEpisodesService,\r\n                private modalService: NgbModal,\r\n                private loginService: LoginService,\r\n                private router: Router) {\r\n        this.subscriptions = new Subscription();\r\n        this.page = 1;\r\n        this.pageSize = 10;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.subscriptions.add(this.service.episodesList\r\n            .subscribe(result => {\r\n                this.episodesList = result;\r\n            })\r\n        );\r\n        // todo check if token exists with an guard and redirect to the main page based on that\r\n        this.subscriptions.add(this.loginService._token\r\n            .subscribe(result => {\r\n                if (!result) {\r\n                    this.router.navigate(['/login']);\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n\r\n    ngOnDestroy(): void {\r\n    this.subscriptions.unsubscribe();\r\n    }\r\n\r\n    openDialog(episode) {\r\n        const modalRef = this.modalService.open(EpisodesDialogComponent);\r\n        modalRef.componentInstance.episode = episode;\r\n    }\r\n\r\n}\r\n","<div class=\"container\" *ngIf=\"episodesList\">\r\n    <ul class=\"list-group  m-2 p-2\" >\r\n        <li *ngFor=\"let episode of episodesList | slice: (page-1) * pageSize : (page-1) * pageSize + pageSize;\" class=\"list-group-item bg-transparent\">\r\n            <div class=\" bg-transparent border border-dark p-2 row\" >\r\n                <div class=\"col-md-8 col-lg-8 col-xl-8\">\r\n                    <p class=\"h3\">{{episode.episodeName ? episode.episodeName : 'N/A'}}</p>\r\n                    <div>\r\n                        <p><span class=\"font-weight-bold\">First aired </span> {{episode.firstAired | date:'fullDate'}}</p>\r\n                    </div>\r\n                    <div>\r\n                        <span class=\"font-weight-bold\">Rating: </span>\r\n                        <app-custom-rating [rate]=\"episode.siteRating/2\"></app-custom-rating>\r\n                        <span class=\"rating-text\">({{episode.siteRating ? episode.siteRating : 'N/A'}})</span>\r\n                    </div>\r\n                    <p class=\" text-muted cursor-pointer \" (click)=\"openDialog(episode)\">\r\n                        Show more..\r\n                    </p>\r\n                </div>\r\n                <div class=\"col-md-4 col-lg-4 col-xl-4\">\r\n                    <img [src]=\"'https://artworks.thetvdb.com/banners/'+episode.filename\" class=\"img-fluid\" alt=\"banner\">\r\n                </div>\r\n\r\n            </div>\r\n        </li>\r\n        <ngb-pagination\r\n                class=\"d-flex justify-content-center\"\r\n                [collectionSize]=\"episodesList.length\"\r\n                [(page)]=\"page\" [maxSize]=\"5\"\r\n                [rotate]=\"true\" [ellipses]=\"false\"\r\n                [boundaryLinks]=\"false\">\r\n        </ngb-pagination>\r\n    </ul>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ShowEpisodesComponent } from './show-episodes.component';\r\nimport { EpisodesDialogComponent } from './episodes-dialog/episodes-dialog.component';\r\nimport { SharedModule } from '../../shared/shared.module';\r\n\r\n\r\n\r\n@NgModule({\r\n    declarations: [ShowEpisodesComponent, EpisodesDialogComponent],\r\n    imports: [\r\n        CommonModule,\r\n        SharedModule\r\n    ],\r\n    exports: [ShowEpisodesComponent],\r\n    entryComponents: [EpisodesDialogComponent]\r\n})\r\nexport class ShowEpisodesModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { SearchShowsService } from '../search-shows/search-shows.service';\r\nimport { ShowEpisodesBackendService } from './show-episodes-backend.service';\r\nimport { Episode } from './episode';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ShowEpisodesService {\r\n    private episodesList$: BehaviorSubject<Episode[]>;\r\n\r\n    constructor(private searchShowsService: SearchShowsService,\r\n                private backendService: ShowEpisodesBackendService) {\r\n        this.episodesList$ = new BehaviorSubject<any>(null);\r\n\r\n    }\r\n\r\n    loadEpisodes(season: number | string, id: number) {\r\n\r\n      this.backendService.getEpisodes(id, season)\r\n          .subscribe((result) => {\r\n            this.setEpisodes(result.data);\r\n          });\r\n    }\r\n\r\n    setEpisodes(value: Episode[]) {\r\n      this.episodesList$.next(value);\r\n    }\r\n\r\n    get episodesList(): Observable<Episode[]> {\r\n        return this.episodesList$.asObservable();\r\n    }\r\n}\r\n","import { HttpHeaders } from '@angular/common/http';\r\n\r\nexport const httpPostOptions = {\r\n    headers: new HttpHeaders(\r\n        {\r\n            'Content-Type': 'application/json',\r\n        })\r\n};\r\n\r\nexport const apiBaseUrl = '/api';\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-custom-rating',\r\n  templateUrl: './custom-rating.component.html',\r\n  styleUrls: ['./custom-rating.component.scss']\r\n})\r\nexport class CustomRatingComponent  {\r\n    @Input() rate: number;\r\n    constructor() { }\r\n\r\n}\r\n","<ngb-rating [(rate)]=\"rate\"\r\n            [starTemplate]=\"ratingTemplate\"\r\n            [readonly]=\"true\" [max]=\"5\">\r\n\r\n</ngb-rating>\r\n<ng-template #ratingTemplate let-fill=\"fill\">\r\n    <span class=\"star\" [class.full]=\"fill === 100\">\r\n        <span class=\"half\" [style.width.%]=\"fill\">&#9733;</span>&#9733;\r\n    </span>\r\n</ng-template>\r\n","import { Observable, of } from 'rxjs';\r\n\r\nexport function handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n\r\n        // TODO: send the error to remote logging infrastructure\r\n        console.error(error); // log to console instead\r\n\r\n        return of(result as T);\r\n    };\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CustomRatingComponent } from './custom-rating/custom-rating.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\n\r\n\r\n\r\n@NgModule({\r\n    declarations: [CustomRatingComponent],\r\n    imports: [\r\n        CommonModule,\r\n        NgbModule,\r\n        FontAwesomeModule\r\n      ],\r\n    exports: [\r\n        CustomRatingComponent,\r\n        NgbModule,\r\n        FontAwesomeModule\r\n    ]\r\n})\r\nexport class SharedModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { LoginService } from '../layout/login/login.service';\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private loginService: LoginService) {}\r\n\r\n    intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n        const token = this.loginService.token;\r\n\r\n        if (token) {\r\n          request = request.clone({\r\n            setHeaders: {\r\n              Authorization: `Bearer ${token}`\r\n            }\r\n          });\r\n        }\r\n        return next.handle(request);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}